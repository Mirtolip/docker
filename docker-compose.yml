version: '3'

networks:
  laravel:

services:

  nginx:
    networks:
      - laravel
    build:
      context: ./nginx
    container_name: nginx
    ports:
      - "8088:80"
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
      - ${NGINX_CONF_FILE}:/etc/nginx/conf.d/default.conf
    depends_on:
      - php
      - postgresql

  composer:
    build:
      context: ./composer
    container_name: composer
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}
    depends_on:
      - php
    user: laravel
    networks:
      - laravel
    entrypoint: [ 'composer', '--ignore-platform-reqs' ]

  npm:
    image: node:13.7
    container_name: npm
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    working_dir: ${APP_PATH_CONTAINER}
    entrypoint: [ 'npm' ]

  php:
    networks:
      - laravel
    build:
      context: ./php
    container_name: php
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    ports:
      - "9000:9000"

  postgresql:
    networks:
      - laravel
    container_name: pgdb
    restart: unless-stopped
    tty: true
    ports:
      - "5432:54326"
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - ${DB_PATH_HOST}:/var/lib/postgresql/data/
    image: library/postgres:latest

  artisan:
    build:
      context: ./php
    container_name: artisan
    volumes:
      - ${APP_PATH_HOST}:${APP_PATH_CONTAINER}
    depends_on:
      - postgresql
    working_dir: ${APP_PATH_CONTAINER}
    user: laravel
    entrypoint: [ 'php', '/var/www/html/artisan' ]
    networks:
      - laravel